{"version":3,"sources":["components/tableHeader.js","data/categoriesContext.js","components/tableHead.js","components/entry.js","utils/getPlayerStat.js","components/tableBody.js","components/searchbar.js","components/tableMain.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","props","onClick","sortMethod","category","className","text","CATEGORIES","getCategories","cb","JSX","thisCat","display","_","isFunction","push","id","value","path","link","headshot","team","teamColorPrimary","teamColorSecondary","username","firstName","lastName","nat","mainRole","mainHero","TableHead","Entry","thisKey","primaryColor","secondaryColor","style","backgroundColor","borderBottomColor","src","width","getPlayerStat","player","get","TableBody","players","map","Searchbar","playerData","Form","Group","controlId","Label","Control","as","rows","placeholder","query","onChange","searchMethod","categoryMethod","sortCategory","sortDirection","TableMain","useState","setPlayers","searchQuery","setSearchQuery","searchCategory","setSearchCategory","useEffect","searchedPlayers","filter","playerStat","undefined","toLowerCase","includes","fetch","then","res","json","results","content","console","log","event","target","Table","striped","bordered","hover","catA","catB","sortedPlayers","sort","a","b","toUpperCase","reverse","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40104157.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction TableHeader (props) {\n    return (\n        <th>\n            <button onClick={() => props.sortMethod(props.category)} className=\"header-btn\"> {props.text} </button>\n        </th>\n    );\n}\n\nexport default TableHeader;","import _ from 'underscore';\r\n\r\nconst CATEGORIES = {\r\n    getCategories: (cb) => {\r\n      let JSX = [];\r\n      for (const category in CATEGORIES) {\r\n        let thisCat = CATEGORIES[category]; // thisCat is an Object that includes display, value, and path\r\n        if (thisCat.display !== null && !_.isFunction(thisCat)) { \r\n          JSX.push(cb(thisCat));\r\n        }\r\n      }\r\n      return JSX;\r\n    },\r\n    id: {\r\n        display: null, // What is shown on the category HTML\r\n        value: \"id\", // What is used as a value when trying to read this\r\n        path: \"id\", // Where to find this value in the player object\r\n    },\r\n    link: {\r\n        display: null,\r\n        value: 'link',\r\n        path: '',\r\n    },\r\n    headshot: {\r\n        display: \"Photo\",\r\n        value: \"headshot\",\r\n        path: \"headshot\"\r\n    },\r\n    team: {\r\n      display: \"Team\",\r\n      value: \"team\",\r\n      path: [\"teams\", 0, 'team', 'name'],\r\n    },\r\n    teamColorPrimary: {\r\n      display: null,\r\n      value: \"teamColorPrimary\",\r\n      path: [\"teams\", 0, 'team', 'primaryColor'],\r\n    },\r\n    teamColorSecondary: {\r\n      display: null,\r\n      value: \"teamColorSecondary\",\r\n      path: [\"teams\", 0, 'team', 'secondaryColor'],\r\n    },\r\n    username: {\r\n      display: \"Username\",\r\n      value: \"username\",\r\n      path: 'name',\r\n    },\r\n    firstName : {\r\n      display: \"First Name\",\r\n      value: \"firstName\",\r\n      path: 'givenName',\r\n    },\r\n    lastName: {\r\n      display: \"Last Name\",\r\n      value: \"lastName\",\r\n      path: 'familyName',\r\n    },\r\n    nat: {\r\n      display: \"Nationality\",\r\n      value: \"nat\",\r\n      path: 'nationality',\r\n    },\r\n    mainRole: {\r\n      display: \"Role\",\r\n      value: \"mainRole\",\r\n      path: ['attributes', 'role'],\r\n    },\r\n    mainHero: {\r\n      display: \"Main Hero\",\r\n      value: \"mainHero\",\r\n      path: ['attributes', 'heroes', [0]],\r\n    },\r\n}\r\n\r\nexport default CATEGORIES;","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport CATEGORIES from '../data/categoriesContext';\r\n\r\nfunction TableHead (props) {\r\n    function getCategories () {\r\n        return CATEGORIES.getCategories(category => {\r\n            return (\r\n            <TableHeader \r\n                text={category.display} \r\n                category={category.value} \r\n                sortMethod={props.sortMethod}\r\n                key={\"tableHeader-\" + category.value}\r\n                />)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {getCategories()}\r\n            </tr>\r\n         </thead>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TableHead;","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport CATEGORIES from '../data/categoriesContext';\n\nfunction Entry(props) {\n    function createEntries () {\n        let JSX = CATEGORIES.getCategories(category => {\n            let thisKey = \"entry-\" + props.id + \"-\" + category.value;\n            let primaryColor = \"#\" + props.teamColorPrimary;\n            let secondaryColor = \"#\" + props.teamColorSecondary;\n\n            switch (category.value) {\n                case \"headshot\":\n                    return(\n                        <td \n                            className=\"entry-headshot\"\n                            key={thisKey}\n                            style={{backgroundColor: primaryColor}}>\n                            <div \n                                className=\"entry-headshot-clr\"\n                                style={{backgroundColor: primaryColor, borderBottomColor: secondaryColor}}></div>\n                            <img \n                                src={props[category.value]}\n                                width=\"128\"></img>\n                        </td>);\n                default:\n                    return(\n                        <td key={thisKey}>\n                        {props[category.value]}\n                        </td>);\n            }\n        });\n        \n        return JSX;\n    }\n\n    return (\n        <tr className=\"entry\">\n            {createEntries()}\n        </tr>\n    );\n}\n\nexport default Entry;","import CATEGORIES from '../data/categoriesContext';\r\nimport _ from 'underscore';\r\n\r\nfunction getPlayerStat (player, category) {\r\n    return _.get(player, CATEGORIES[category].path);\r\n}\r\n\r\nexport default getPlayerStat;","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Entry from './entry';\nimport getPlayerStat from '../utils/getPlayerStat';\n\nfunction TableBody (props) {\n    function renderPlayers () {\n        return (\n            props.players.map(player => {\n                return (\n                    <Entry \n                    // {...getCategoryAttributes()}\n                    key = {getPlayerStat(player, 'id')}\n                    id = {getPlayerStat(player, 'id')}\n                    link = {getPlayerStat(player, 'link')}\n                    username = {getPlayerStat(player, 'username')}\n                    firstName = {getPlayerStat(player, 'firstName')}\n                    lastName = {getPlayerStat(player, 'lastName')}\n                    mainRole = {getPlayerStat(player, 'mainRole')}\n                    mainHero = {getPlayerStat(player, 'mainHero')}\n                    team = {getPlayerStat(player, 'team')}\n                    teamColorPrimary = {getPlayerStat(player, 'teamColorPrimary')}\n                    teamColorSecondary = {getPlayerStat(player, 'teamColorSecondary')}\n                    nat = {getPlayerStat(player, 'nat')}\n                    headshot = {getPlayerStat(player, 'headshot')}\n                    />\n                )\n            })\n        )\n    }\n//     function getCategoryAttributes () {\n//         let attributes = [];\n//         for (const category in CATEGORIES) {\n//             attributes.push(`${CATEGORIES[category].value} = ${CATEGORIES[category].path}`);\n//         }\n//         console.log(\"Attributes: \", attributes);\n//         return attributes;\n//     }\n\n    return (\n        <tbody>\n            {renderPlayers()}\n        </tbody>\n    )\n}\n\n\nexport default TableBody;","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport CATEGORIES from '../data/categoriesContext';\n\nfunction Searchbar(props) {\n    return (\n        <Form>\n            <Form.Group controlId=\"formSearch\">\n                <Form.Label>Search Query</Form.Label>\n                <Form.Control as=\"textarea\" rows={1} placeholder=\"Search for a player here!\" value={props.query} onChange={props.searchMethod}/>\n            </Form.Group>\n            <Form.Group controlId=\"formCategory\">\n                <Form.Label>Search Category</Form.Label>\n                <Form.Control as=\"select\" value={props.category} onChange={props.categoryMethod}> \n                    {createOptionsUsingCategory()}\n                    {/* <option value={'team'}>Team</option> \n                    <option value={'username'}>Username</option> \n                    <option>3</option> \n                    <option>4</option>  */}\n                </Form.Control>\n            </Form.Group>\n        </Form>\n    );\n}\n\nfunction createOptionsUsingCategory () {\n    return CATEGORIES.getCategories(category => {\n        return (<option \n            key={\"searchoption-\"+category.value} \n            value={category.value}>\n            {category.display}\n        </option>)\n    });\n}\n\nexport default Searchbar;","import React, {useState, useEffect} from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport TableHead from './tableHead';\nimport TableBody from './tableBody';\nimport Searchbar from './searchbar';\nimport getPlayerStat from '../utils/getPlayerStat';\nimport './table.css';\n\nlet sortCategory = 'username';\nlet sortDirection = 'descending';\nlet playerData;\n\nfunction TableMain () {\n  const [players, setPlayers] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchCategory, setSearchCategory] = useState('team');\n\n  useEffect(() => {\n    if (players !== null) {\n      let searchedPlayers = playerData.filter(player => {\n        let playerStat = getPlayerStat(player, searchCategory);\n        if(playerStat !== undefined && playerStat.toLowerCase().includes(searchQuery)) {\n          return true;\n        } else { \n          return false; \n        }\n      });\n      setPlayers(searchedPlayers);\n    }\n  }, [searchQuery]);\n\n  useEffect(() => {\n    fetch(\"https://api.overwatchleague.com/players\")\n      .then (res => res.json())\n      .then (results => {\n        playerData = results.content;\n        console.log(\"pdata\", playerData);\n      })\n      .then (() => {\n        setPlayers(playerData);\n      })\n  }, []);\n\n\n  \n\n\n  function sortByCategory (category) {\n    if (sortCategory === category) {\n      toggleDirection();\n    } else {\n      sortDirection = 'descending';\n      sortCategory = category;\n    }\n    \n    let catA, catB;\n    let sortedPlayers = players.sort(function(a, b) {\n      catA = getPlayerStat(a, category);\n      catB = getPlayerStat(b, category);\n\n      // If either category is null, then sort accordingly\n      if(catA === undefined || catB === undefined) {\n        if (catA === undefined && catB === undefined) { return 0; } \n        else if (catA === undefined) { return 1; } \n        else if (catB === undefined) { return -1; }\n      }\n\n      // If neither are null, then sort accordingly.\n      else {\n        // If both are strings, then capitalize\n        if(typeof catA === 'string' && typeof catB === 'string') {\n          catA = catA.toUpperCase();\n          catB = catB.toUpperCase();\n        }\n\n        if(catA > catB) { return 1; } \n        else if (catA < catB) { return -1; } \n        else { return 0; }\n      }\n    });\n\n    // If the category is based on numbers, reverse it. The sorting algorithm sorts these in reverse by default\n    if (typeof catA === \"number\") { \n      sortedPlayers.reverse(); \n    } \n\n    if (sortDirection === \"ascending\") {\n      sortedPlayers.reverse();\n    }\n\n    /* NOTE I DID IT!!!!! There was a HUGE issue here where I was using `setPlayers(sortedPlayers)` and it wasn't updating state, which wasn't re-rendering the component. \n      I believe this was caused because though I was reording the array, I wasn't actually re-assigning it. \n      For some reason, spreading the array is what solved this incredibly frustrating issue.\n      This article helped me solve this: https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\n      This article explains the issue: https://stackoverflow.com/questions/56266575/why-is-usestate-not-triggering-re-render\n    */\n    setPlayers([...sortedPlayers]);\n  }\n\n  function toggleDirection () {\n    if(sortDirection === \"ascending\") {\n      sortDirection = \"descending\";\n    } else {\n      sortDirection = \"ascending\";\n    }\n  }\n\n  function handleSearchQuery (event) {\n    let query = event.target.value.toLowerCase();\n    setSearchQuery(query);\n  }\n\n  function handleSearchCategory (event) {\n    console.log(\"event: \", event.target.value);\n    setSearchCategory(event.target.value);\n  }\n\n  // ANCHOR Return JSX!\n  if (players === null) { \n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  } else {\n    return (\n      <>\n      <Searchbar \n        searchMethod={handleSearchQuery} \n        categoryMethod={handleSearchCategory} \n        category={searchCategory} \n        query={searchQuery}/>\n      <Table striped bordered hover>\n        <TableHead \n          sortMethod={sortByCategory}/>\n        <TableBody \n          players={players}/>\n      </Table>\n      </>\n    );\n  }\n}\n\nexport default TableMain;","import './App.css';\nimport TableMain from './components/tableMain';\nimport Container from 'react-bootstrap/Container';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Container>\n      <header>Overwatch League Playersheet</header>\n      <TableMain />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
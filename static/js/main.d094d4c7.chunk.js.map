{"version":3,"sources":["components/tableHeader.js","data/categoriesContext.js","components/tableHead.js","components/entry.js","utils/getPlayerStat.js","components/tableBody.js","components/searchbar.js","components/tableMain.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","props","onClick","sortMethod","category","text","CATEGORIES","id","display","value","path","link","headshot","team","username","firstName","lastName","nat","mainRole","mainHero","TableHead","categories","thisCat","push","getCategories","Entry","stats","src","width","getCategoryStats","getPlayerStat","player","_","get","TableBody","players","map","Searchbar","playerData","Form","Group","controlId","Label","Control","as","rows","placeholder","query","onChange","searchMethod","categoryMethod","sortCategory","sortDirection","TableMain","useState","setPlayers","searchQuery","setSearchQuery","searchCategory","setSearchCategory","useEffect","searchedPlayers","filter","toLowerCase","includes","fetch","then","res","json","results","content","console","log","event","target","Table","striped","bordered","hover","catA","catB","sortedPlayers","sort","a","b","toUpperCase","reverse","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d094d4c7.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction TableHeader (props) {\n    return (\n        <th>\n            <button onClick={() => props.sortMethod(props.category)}> {props.text} </button>\n        </th>\n    );\n}\n\nexport default TableHeader;","const CATEGORIES = {\r\n    id: {\r\n        display: null, // What is shown on the category HTML\r\n        value: \"id\", // What is used as a value when trying to read this\r\n        path: \"id\", // Where to find this value in the player object\r\n    },\r\n    link: {\r\n        display: null,\r\n        value: 'link',\r\n        path: '',\r\n    },\r\n    headshot: {\r\n        display: \"Photo\",\r\n        value: \"headshot\",\r\n        path: \"headshot\"\r\n    },\r\n    team: {\r\n      display: \"Team\",\r\n      value: \"team\",\r\n      path: [\"teams\", 0, 'team', 'name'],\r\n    },\r\n    username: {\r\n      display: \"Username\",\r\n      value: \"username\",\r\n      path: 'name',\r\n    },\r\n    firstName : {\r\n      display: \"First Name\",\r\n      value: \"firstName\",\r\n      path: 'givenName',\r\n    },\r\n    lastName: {\r\n      display: \"Last Name\",\r\n      value: \"lastName\",\r\n      path: 'familyName',\r\n    },\r\n    nat: {\r\n      display: \"Nationality\",\r\n      value: \"nat\",\r\n      path: 'nationality',\r\n    },\r\n    // competitiveRank: {\r\n    //   display: \"Rank\",\r\n    //   value: \"competitiveRank\",\r\n    //   path: 'rank',\r\n    // },\r\n    mainRole: {\r\n      display: \"Role\",\r\n      value: \"mainRole\",\r\n      path: ['attributes', 'role'],\r\n    },\r\n    mainHero: {\r\n      display: \"Main Hero\",\r\n      value: \"mainHero\",\r\n      path: ['attributes', 'heroes', [0]],\r\n    },\r\n}\r\n\r\nexport default CATEGORIES;\r\n\r\n/*\r\nOld categories, before the refactor into a new OWL API\r\nconst CATEGORIES = {\r\n    team: {\r\n      display: \"Team\",\r\n      value: \"team\",\r\n      path: \"team\",\r\n    },\r\n    username: {\r\n      display: \"Username\",\r\n      value: \"username\",\r\n      path: ['login', 'username'],\r\n    },\r\n    firstName : {\r\n      display: \"First Name\",\r\n      value: \"firstName\",\r\n      path: ['name', 'first'],\r\n    },\r\n    lastName: {\r\n      display: \"Last Name\",\r\n      value: \"lastName\",\r\n      path: ['name', 'last'],\r\n    },\r\n    nat: {\r\n      display: \"Nationality\",\r\n      value: \"nat\",\r\n      path: 'nat',\r\n    },\r\n    competitiveRank: {\r\n      display: \"Rank\",\r\n      value: \"competitiveRank\",\r\n      path: 'rank',\r\n    },\r\n    mainRole: {\r\n      display: \"Role\",\r\n      value: \"mainRole\",\r\n      path: 'role',\r\n    },\r\n    mainHero: {\r\n      display: \"Main Hero\",\r\n      value: \"mainHero\",\r\n      path: 'hero',\r\n    },\r\n}*/","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport CATEGORIES from '../data/categoriesContext';\r\n\r\nfunction TableHead (props) {\r\n    function getCategories () {\r\n        let categories = [];\r\n        for (const category in CATEGORIES) {\r\n            let thisCat = CATEGORIES[category];\r\n            if (thisCat.display !== null) {\r\n                categories.push(<TableHeader text={thisCat.display} category={thisCat.value} sortMethod={props.sortMethod}/>)\r\n            }\r\n        }\r\n        return categories;\r\n    }\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {getCategories()}\r\n                {/* <TableHeader text=\"Team\" category=\"team\" sortMethod={props.sortMethod}/>\r\n                <TableHeader text=\"Username\" category=\"username\" sortMethod={props.sortMethod}/>\r\n                <TableHeader text=\"First Name\" category=\"firstName\" sortMethod={props.sortMethod}/>\r\n                <TableHeader text=\"Last Name\" category=\"lastName\" sortMethod={props.sortMethod}/>\r\n                <TableHeader text=\"Nationality\" category=\"nat\" sortMethod={props.sortMethod}/>\r\n                <TableHeader text=\"Rank\" category=\"competitiveRank\" sortMethod={props.sortMethod}/>\r\n                <TableHeader text=\"Main Role\" category=\"mainRole\" sortMethod={props.sortMethod}/>\r\n                <TableHeader text=\"Main Hero\" category=\"mainHero\" sortMethod={props.sortMethod}/> */}\r\n            </tr>\r\n         </thead>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default TableHead;","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport CATEGORIES from '../data/categoriesContext';\n\nfunction Entry(props) {\n    function getCategoryStats () {\n        let stats = [];\n\n        for (const category in CATEGORIES) {\n            let thisCat = CATEGORIES[category];\n            if (thisCat.display !== null) {\n                switch (thisCat.value) {\n                    case \"headshot\":\n                        stats.push(<td><img \n                            src={props[thisCat.value]}\n                            width=\"100\"></img></td>)\n                        break;\n                    default:\n                        stats.push(<td>{props[thisCat.value]}</td>);\n                }\n            }\n        }\n        return stats;\n    }\n\n    return (\n        <tr>\n            {getCategoryStats()}\n        </tr>\n    );\n}\n\n\n\n// function getUsernameWithLink (link, username) {\n//     if (link) { return <a href={link}>{username}</a> }\n//     else { return username }\n// }\n\nexport default Entry;","import CATEGORIES from '../data/categoriesContext';\r\nimport _ from 'underscore';\r\n\r\nfunction getPlayerStat (player, category) {\r\n    return _.get(player, CATEGORIES[category].path);\r\n}\r\n\r\nexport default getPlayerStat;","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Entry from './entry';\nimport getPlayerStat from '../utils/getPlayerStat';\n\nfunction TableBody (props) {\n    function renderPlayers () {\n        return (\n            props.players.map(player => {\n                return (\n                    <Entry \n                    // {...getCategoryAttributes()}\n                    key = {getPlayerStat(player, 'id')}\n                    link = {getPlayerStat(player, 'link')}\n                    username = {getPlayerStat(player, 'username')}\n                    firstName = {getPlayerStat(player, 'firstName')}\n                    lastName = {getPlayerStat(player, 'lastName')}\n                    mainRole = {getPlayerStat(player, 'mainRole')}\n                    mainHero = {getPlayerStat(player, 'mainHero')}\n                    team = {getPlayerStat(player, 'team')}\n                    nat = {getPlayerStat(player, 'nat')}\n                    headshot = {getPlayerStat(player, 'headshot')}\n                    />\n                )\n            })\n        )\n    }\n//     function getCategoryAttributes () {\n//         let attributes = [];\n//         for (const category in CATEGORIES) {\n//             attributes.push(`${CATEGORIES[category].value} = ${CATEGORIES[category].path}`);\n//         }\n//         console.log(\"Attributes: \", attributes);\n//         return attributes;\n//     }\n\n    return (\n        <tbody>\n            {renderPlayers()}\n        </tbody>\n    )\n}\n\n\nexport default TableBody;","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport Form from 'react-bootstrap/Form'\n\nfunction Searchbar(props) {\n    return (\n        <Form>\n            <Form.Group controlId=\"formSearch\">\n                <Form.Label>Search Query</Form.Label>\n                <Form.Control as=\"textarea\" rows={1} placeholder=\"Search for a player here!\" value={props.query} onChange={props.searchMethod}/>\n            </Form.Group>\n            <Form.Group controlId=\"formCategory\">\n                <Form.Label>Search Category</Form.Label>\n                <Form.Control as=\"select\" value={props.category} onChange={props.categoryMethod}> \n                    <option value={'team'}>Team</option> \n                    <option value={'username'}>Username</option> \n                    <option>3</option> \n                    <option>4</option> \n                </Form.Control>\n            </Form.Group>\n        </Form>\n    );\n}\n\nexport default Searchbar;","import React, {useState, useEffect} from \"react\";\n// import playerdata from \"../data/userseeds.json\";\nimport Table from 'react-bootstrap/Table';\nimport TableHead from './tableHead';\nimport TableBody from './tableBody';\n// import owStats from '../data/owStats';\nimport Searchbar from './searchbar';\nimport getPlayerStat from '../utils/getPlayerStat';\n\nlet sortCategory = 'username';\nlet sortDirection = 'descending';\nlet playerData;\n\nfunction TableMain () {\n  const [players, setPlayers] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchCategory, setSearchCategory] = useState('team');\n\n  useEffect(() => {\n    if (players !== null && searchQuery !== '') {\n      let searchedPlayers = playerData.filter(player => {\n        // let lowercasePlayerCategory = player[CATEGORIES[searchCategory].path].toLowerCase();\n        let lowercasePlayerStat = getPlayerStat(player, searchCategory).toLowerCase();\n        if(lowercasePlayerStat.includes(searchQuery)) {\n          return true;\n        } else { \n          return false; \n        }\n      });\n      setPlayers(searchedPlayers);\n    }\n  }, [searchQuery]);\n\n  // ANCHOR API CALL!\n  // useEffect(() => {\n  //   fetch(\"https://randomuser.me/api/?results=30&inc=name,nat,login,\")\n  //     .then (res => res.json())\n  //     .then (results => {\n  //       playerData = results.results;\n  //       for (let player of playerData) {\n  //         let stats = owStats();\n\n  //         player.role = stats.role;\n  //         player.hero = stats.hero;\n  //         player.rank = stats.rank;\n  //         player.team = stats.team;\n  //       }\n  //       console.log(\"playerData: \", playerData);\n  //     })\n  //     .then (() => {\n  //       setPlayers(playerData);\n  //     })\n  // }, []);\n  useEffect(() => {\n    fetch(\"https://api.overwatchleague.com/players\")\n      .then (res => res.json())\n      .then (results => {\n        playerData = results.content;\n        console.log(\"pdata\", playerData);\n      })\n      .then (() => {\n        setPlayers(playerData);\n      })\n  }, []);\n\n\n  \n\n\n  function sortByCategory (category) {\n    if (sortCategory === category) {\n      toggleDirection();\n    } else {\n      sortDirection = 'descending';\n      sortCategory = category;\n    }\n    \n    let catA, catB;\n    let sortedPlayers = players.sort(function(a, b) {\n      catA = getPlayerStat(a, category);\n      catB = getPlayerStat(b, category);\n\n      // If either category is null, then sort accordingly\n      if(catA === null || catB === null) {\n        if (catA === null && catB === null) { return 0; } \n        else if (catA === null) { return 1; } \n        else if (catB === null) { return -1; }\n      }\n\n      // If neither are null, then sort accordingly.\n      else {\n        // If both are strings, then capitalize\n        if(typeof catA === 'string' && typeof catB === 'string') {\n          catA = catA.toUpperCase();\n          catB = catB.toUpperCase();\n        }\n\n        if(catA > catB) { return 1; } \n        else if (catA < catB) { return -1; } \n        else { return 0; }\n      }\n    });\n\n    // If the category is based on numbers, reverse it. The sorting algorithm sorts these in reverse by default\n    if (typeof catA === \"number\") { \n      sortedPlayers.reverse(); \n    } \n\n    if (sortDirection === \"ascending\") {\n      sortedPlayers.reverse();\n    }\n\n    /* NOTE I DID IT!!!!! There was a HUGE issue here where I was using `setPlayers(sortedPlayers)` and it wasn't updating state, which wasn't re-rendering the component. \n      I believe this was caused because though I was reording the array, I wasn't actually re-assigning it. \n      For some reason, spreading the array is what solved this incredibly frustrating issue.\n      This article helped me solve this: https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\n      This article explains the issue: https://stackoverflow.com/questions/56266575/why-is-usestate-not-triggering-re-render\n    */\n    setPlayers([...sortedPlayers]);\n  }\n\n  function toggleDirection () {\n    if(sortDirection === \"ascending\") {\n      sortDirection = \"descending\";\n    } else {\n      sortDirection = \"ascending\";\n    }\n  }\n\n  function handleSearchQuery (event) {\n    let query = event.target.value.toLowerCase();\n    setSearchQuery(query);\n  }\n\n  function handleSearchCategory (event) {\n    console.log(\"event: \", event.target.value);\n    setSearchCategory(event.target.value);\n  }\n\n  // ANCHOR Return JSX!\n  if (players === null) { \n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  } else {\n    return (\n      <>\n      <Searchbar \n        searchMethod={handleSearchQuery} \n        categoryMethod={handleSearchCategory} \n        category={searchCategory} \n        query={searchQuery}/>\n      <Table striped bordered hover>\n        <TableHead sortMethod={sortByCategory}/>\n        <TableBody players={players}/>\n      </Table>\n      </>\n    );\n  }\n}\n\nexport default TableMain;","import './App.css';\nimport TableMain from './components/tableMain';\nimport Container from 'react-bootstrap/Container';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Container>\n      <TableMain />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/tableHeader.js","components/entry.js","components/tableBody.js","data/owStats.js","components/searchbar.js","components/tableMain.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","props","onClick","sortMethod","category","text","getUsernameWithLink","link","username","href","Entry","team","firstName","lastName","nat","competitiveRank","mainRole","mainHero","TableBody","players","map","player","login","name","first","last","rank","role","hero","uuid","heros","teams","getRandomOWPlayerStats","selectedHeroIndex","Math","floor","random","length","getRandomHero","selectedTeamIndex","getRandomTeam","Searchbar","Form","Group","Label","Control","as","rows","Text","sortCategory","sortDirection","TableMain","useState","setPlayers","useEffect","console","log","newPlayers","fetch","then","res","json","results","stats","owStats","Table","striped","bordered","hover","sortByCategory","catA","catB","sortedPlayers","sort","a","b","toUpperCase","reverse","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.194ec2ac.chunk.js","sourcesContent":["/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nfunction TableHeader (props) {\r\n    return (\r\n        <th>\r\n            <button onClick={() => props.sortMethod(props.category)}> {props.text} </button>\r\n        </th>\r\n    );\r\n}\r\n\r\nexport default TableHeader;","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction Entry(props) {\n    return (\n        <tr>\n            <td>{props.team}</td>\n            <td>{getUsernameWithLink(props.link, props.username)}</td>\n            <td>{props.firstName}</td>\n            <td>{props.lastName}</td>\n            <td>{props.nat}</td>\n            <td>{props.competitiveRank}</td>\n            <td>{props.mainRole}</td>\n            <td>{props.mainHero}</td>\n        </tr>\n    );\n}\n\nfunction getUsernameWithLink (link, username) {\n    if (link) { return <a href={link}>{username}</a> }\n    else { return username }\n}\n\nexport default Entry;","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport Entry from './entry';\r\n\r\nfunction TableBody (props) {\r\n    function renderPlayers () {\r\n        return (\r\n            props.players.map(player => {\r\n                return (\r\n                    <Entry \r\n                    key = {player.login.uuid}\r\n                    username = {player.login.username}\r\n                    firstName = {player.name.first}\r\n                    lastName = {player.name.last}\r\n                    competitiveRank = {player.rank}\r\n                    mainRole = {player.role}\r\n                    mainHero = {player.hero}\r\n                    team = {player.team}\r\n                    link = {player.link}\r\n                    nat = {player.nat}\r\n                    />\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <tbody>\r\n            {renderPlayers()}\r\n        </tbody>\r\n    )\r\n}\r\n\r\n\r\nexport default TableBody;","const heros = [\r\n    { role: \"Tank\", name: \"D.Va\" },\r\n    { role: \"Tank\", name: \"Orisa\" },\r\n    { role: \"Tank\", name: \"Reinhardt\" },\r\n    { role: \"Tank\", name: \"Roadhog\" },\r\n    { role: \"Tank\", name: \"Sigma\" },\r\n    { role: \"Tank\", name: \"Winston\" },\r\n    { role: \"Tank\", name: \"Wrecking Ball\" },\r\n    { role: \"Tank\", name: \"Zarya\" },\r\n    { role: \"Damage\", name: \"Ashe\" },\r\n    { role: \"Damage\", name: \"Bastion\" },\r\n    { role: \"Damage\", name: \"Doomfist\" },\r\n    { role: \"Damage\", name: \"Echo\" },\r\n    { role: \"Damage\", name: \"Genji\" },\r\n    { role: \"Damage\", name: \"Hanzo\" },\r\n    { role: \"Damage\", name: \"Junkrat\" },\r\n    { role: \"Damage\", name: \"McCree\" },\r\n    { role: \"Damage\", name: \"Mei\" },\r\n    { role: \"Damage\", name: \"Pharah\" },\r\n    { role: \"Damage\", name: \"Reaper\" },\r\n    { role: \"Damage\", name: \"Soldier: 76\" },\r\n    { role: \"Damage\", name: \"Sombra\" },\r\n    { role: \"Damage\", name: \"Symmetra\" },\r\n    { role: \"Damage\", name: \"Torbjörn\" },\r\n    { role: \"Damage\", name: \"Tracer\" },\r\n    { role: \"Damage\", name: \"Widowmaker\" },\r\n    { role: \"Support\", name: \"Ana\" },\r\n    { role: \"Support\", name: \"Baptiste\" },\r\n    { role: \"Support\", name: \"Brigitte\" },\r\n    { role: \"Support\", name: \"Lúcio\" },\r\n    { role: \"Support\", name: \"Mercy\" },\r\n    { role: \"Support\", name: \"Moira\" },\r\n    { role: \"Support\", name: \"Zenyatta\" },\r\n]\r\n\r\nconst teams = [\r\n    \"San Francisco Shock\",\r\n    \"New York Excelsior\",\r\n    \"Shanghai Dragons\",\r\n    \"Dallas Fuel\",\r\n    \"Los Angeles Gladiators\",\r\n    \"Seoul Dynasty\",\r\n    \"London Spitfire\",\r\n    \"Los Angeles Valiant\",\r\n    \"Houston Outlaws\"\r\n]\r\n\r\nfunction getRandomRank () {\r\n    return Math.floor(Math.random() * 5000);\r\n}\r\n\r\nfunction getRandomHero () {\r\n    let selectedHeroIndex = Math.floor(Math.random() * heros.length);\r\n    return heros[selectedHeroIndex];\r\n}\r\n\r\nfunction getRandomTeam () {\r\n    let selectedTeamIndex = Math.floor(Math.random() * teams.length);\r\n    return teams[selectedTeamIndex];\r\n}\r\n\r\nfunction getRandomOWPlayerStats () {\r\n    let hero = getRandomHero();\r\n    let rank = getRandomRank();\r\n    let team = getRandomTeam();\r\n\r\n    let stats = {\r\n        role: hero.role,\r\n        hero: hero.name,\r\n        rank: rank,\r\n        team: team,\r\n    };\r\n\r\n    return stats;\r\n}\r\n\r\nexport default getRandomOWPlayerStats;","import React from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nfunction Searchbar() {\r\n    return (\r\n        // <div>\r\n        //     testty\r\n        // </div>\r\n        <Form>\r\n            test\r\n            <Form.Group>\r\n                <Form.Label>Search</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={1}/>\r\n                <Form.Text>\r\n                    awe yeah\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control as=\"select\"> \r\n                    <option>1</option> \r\n                    <option>2</option> \r\n                    <option>3</option> \r\n                    <option>4</option> \r\n                </Form.Control>\r\n                <Form.Text>\r\n                    test\r\n                </Form.Text>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Searchbar;","import React, {useState, useEffect} from \"react\";\n// import playerdata from \"../data/userseeds.json\";\nimport Table from 'react-bootstrap/Table';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\nimport owStats from '../data/owStats';\nimport Searchbar from './searchbar';\n\n// let playerdata = null;\nlet sortCategory = 'username';\nlet sortDirection = 'descending';\nlet searchQuery = null;\n\nfunction TableMain () {\n  const [players, setPlayers] = useState(null);\n\n  useEffect(() => {\n    console.log(\"Players updated! Re-rendering.\");\n  }, [players])\n\n  useEffect(() => {\n    \n  }, [sortCategory, sortDirection, searchQuery]);\n\n  // ANCHOR API CALL!\n  useEffect(() => {\n    let newPlayers;\n    fetch(\"https://randomuser.me/api/?results=30&inc=name,nat,login,\")\n      .then (res => res.json())\n      .then (results => {\n        newPlayers = results.results;\n        for (let player of newPlayers) {\n          let stats = owStats();\n\n          player.role = stats.role;\n          player.hero = stats.hero;\n          player.rank = stats.rank;\n          player.team = stats.team;\n        }\n        console.log(\"newPlayers: \", newPlayers);\n      })\n      .then (() => {\n        setPlayers(newPlayers);\n      })\n  }, []);\n\n  if (players === null) { \n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  } else {\n    return (\n      <>\n      <Searchbar />\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <TableHeader text=\"Team\" category=\"team\" sortMethod={sortByCategory}/>\n            <TableHeader text=\"Username\" category=\"username\" sortMethod={sortByCategory}/>\n            <TableHeader text=\"First Name\" category=\"firstName\" sortMethod={sortByCategory}/>\n            <TableHeader text=\"Last Name\" category=\"lastName\" sortMethod={sortByCategory}/>\n            <TableHeader text=\"Nationality\" category=\"nat\" sortMethod={sortByCategory}/>\n            <TableHeader text=\"Rank\" category=\"competitiveRank\" sortMethod={sortByCategory}/>\n            <TableHeader text=\"Main Role\" category=\"mainRole\" sortMethod={sortByCategory}/>\n            <TableHeader text=\"Main Hero\" category=\"mainHero\" sortMethod={sortByCategory}/>\n          </tr>\n        </thead>\n        <TableBody players={players}/>\n      </Table>\n      </>\n    );\n  }\n\n\n  function sortByCategory (category) {\n    if (sortCategory === category) {\n      toggleDirection();\n    } else {\n      sortDirection = 'descending';\n      sortCategory = category;\n    }\n\n    let catA, catB;\n    let sortedPlayers = players.sort(function(a, b) {\n      catA = a[category];\n      catB = b[category];\n\n      // If either category is null, then sort accordingly\n      if(catA === null || catB === null) {\n        if (catA === null && catB === null) { return 0; } \n        else if (catA === null) { return 1; } \n        else if (catB === null) { return -1; }\n      }\n\n      // If neither are null, then sort accordingly.\n      else {\n        // If both are strings, then capitalize\n        if(typeof catA === 'string' && typeof catB === 'string') {\n          catA = catA.toUpperCase();\n          catB = catB.toUpperCase();\n        }\n\n        if(catA > catB) { return 1; } \n        else if (catA < catB) { return -1; } \n        else { return 0; }\n      }\n    });\n\n    // If the category is based on numbers, reverse it. The sorting algorithm sorts these in reverse by default\n    if (typeof catA === \"number\") { \n      sortedPlayers.reverse(); \n    } \n\n    if (sortDirection === \"ascending\") {\n      sortedPlayers.reverse();\n    }\n\n    /* NOTE I DID IT!!!!! There was a HUGE issue here where I was using `setPlayers(sortedPlayers)` and it wasn't updating state, which wasn't re-rendering the component. \n      I believe this was caused because though I was reording the array, I wasn't actually re-assigning it. \n      For some reason, spreading the array is what solved this incredibly frustrating issue.\n      This article helped me solve this: https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\n      This article explains the issue: https://stackoverflow.com/questions/56266575/why-is-usestate-not-triggering-re-render\n    */\n    setPlayers([...sortedPlayers]);\n  }\n\n  function toggleDirection () {\n    if(sortDirection === \"ascending\") {\n      sortDirection = \"descending\";\n    } else {\n      sortDirection = \"ascending\";\n    }\n  }\n}\n\nexport default TableMain;","import './App.css';\nimport TableMain from './components/tableMain';\nimport Container from 'react-bootstrap/Container';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <Container>\n      <TableMain />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}